import telebot
from postgreSQL import PostgreSQL
import const
import random
import time
import os

DATABASE = os.environ.get('DATABASE')
USER = os.environ.get('USERNAMEDB')
PASSWORD = os.environ.get('PASSWORD')
HOST = os.environ.get('HOST')
PORT = 5432
adminId = int(os.environ.get('adminId'))

def error_message(msg, bot):
    bot.send_message(msg.chat.id, "–í –º–æ–µ–º –ü–∏–¥–æ—Ä –º–µ—Ö–∞–Ω–∏–∑–º–µ –∫–∞–∫–æ–π-—Ç–æ —Å–±–æ–π‚åõ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑‚ôª")
def wrong_chat_message(msg, bot):
    bot.send_message(msg.chat.id, "–¢—ã –¥–æ–ª–±–∞–µ–±üë∫, –≤ –≥—Ä—É–ø–ø—É –º–µ–Ω—è –∫–∏–Ω—å –∏ —Ç–∞–º –ø—Ä–æ–ø–∏—Å—ã–≤–∞–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É‚òù")

def telegram_bot(token):

    bot = telebot.TeleBot(token)

    @bot.message_handler(commands=['start'])
    def start_message(message):
        try: 
            if message.chat.type == 'private':
                bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {message.from_user.first_name if message.from_user.first_name else message.from_user.username}üëã. –Ø –ü–∏–¥–æ—Ä –ë–æ—Çüåà, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ—é, –¥–æ–±–∞–≤—å –º–µ–Ω—è –≤ —á–∞—Ç –∫ —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º –∏–ª–∏ –∫–æ–ª–ª–µ–≥–∞–ºüí™, –∏ –ø—Ä–æ–ø–∏—à–∏ —Ç–∞–º üëâ/start@pidorochek_bot")
            else:
                bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞ {message.chat.title}üëã.\n –Ø –ü–∏–¥–æ—Ä –ë–æ—Çüåà, –≤–æ—Ç –≤–∞–º –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ –º–Ω–æ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—Å—èüîß\n–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞–ø–∏—Å–∞—Ç—å üëâ/reg@pidorochek_bot\n(–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤üìú –Ω–∞–ø–∏—à–∏—Ç–µ üëâ/showreg@pidorochek_bot)\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—Å–µ –∫—Ç–æ —Ö–æ—Ç–µ–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å, –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—Ç–µ üëâ/pidor@pidorochek_bot\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ãüìã –Ω–∞–ø–∏—à–∏—Ç–µ üëâ/help@pidorochek_bot\n –î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –µ–±–ª—è –≤ —Å—Ä–∞–∫—Éüëâüëå")
        except Exception as e:
            print(e)
            error_message(message, bot)

    @bot.message_handler(commands=['help'])
    def help_message(message):
        try:
            if message.from_user.id == adminId and message.chat.id == adminId:
                bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–º–µ—Ä—Ç–Ω—ã—Ö:\n{const.private_commands}\n–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n{const.admin_commands}")
            elif message.chat.id == message.from_user.id:
                bot.send_message(message.chat.id, const.private_commands)
            else:
                bot.send_message(message.chat.id, const.commands)
        except Exception as e:
            print(e)
            error_message(message, bot)
    @bot.message_handler(commands=['reg'])
    def reg_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                if message.chat.type == 'private':
                    return wrong_chat_message(message, bot)
                else:
                    users = psql.user_exists(message.from_user.id, message.chat.id)
                    if users:
                        bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—åü§°")
                    else:
                        user_id = int(message.from_user.id)
                        chat_id = int(message.chat.id)
                        first_name = str(message.from_user.first_name)
                        username = str(message.from_user.username)
                        date = int(message.date)
                        psql.add_user(user_id, chat_id, first_name, username, date)
                        bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—åüåà")
            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)
    @bot.message_handler(commands=['unreg'])
    def unreg_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                if message.chat.type == 'private':
                    return wrong_chat_message(message, bot)
                else:
                    users = psql.user_exists(message.from_user.id, message.chat.id)
                    if users:
                        psql.delete_user(users[0])
                        bot.send_message(message.chat.id, "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ —É—á–∞—Å—Ç–∏–µüôÖ‚Äç‚ôÇÔ∏è –∏ –ø—Ä–æ–µ–±–∞–ª–∏ –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n–ê —á—Ç–æ –ø–æ–¥–µ–ª–∞—Ç—å, —Ç–∞–∫–æ–≤–∞ –∂–∏–∑–Ω—åü§∑‚Äç‚ôÇÔ∏è")
                    else:
                        bot.send_message(message.chat.id, "–í—ã –∏ —Ç–∞–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –Ω–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—åü§°")

            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)

    @bot.message_handler(commands=['showreg'])
    def show_reg_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                if message.chat.type == 'private':
                    return wrong_chat_message(message, bot)
                else:
                    users = psql.get_reg_users(message.chat.id)
                    if bool(len(users)):
                        infoMessage = "üìã–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏:\n"
                        i = 1
                        for user in users:
                            infoMessage += f"{i}.üëâ {user[3] if user [3] else user[4]}"
                            i += 1
                        bot.send_message(message.chat.id, infoMessage)
                    else:
                        bot.send_message(message.chat.id, "–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüôá‚Äç‚ôÇÔ∏è, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏—Ç–µ üëâ/reg@pidorochek_bot")
            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)
    @bot.message_handler(commands=['achievements'])
    def achievements_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                if message.chat.type == 'private':
                    return wrong_chat_message(message, bot)
                else:
                    user = psql.user_exists(message.from_user.id, message.chat.id)
                    if user:
                        pidor_count = user[5]
                        achv_message = f"üèÜ–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è {message.from_user.username if message.from_user.username else message.from_user.first_name} –≤ —á–∞—Ç–µ \"{message.chat.title}\":\n\n"
                        if pidor_count >= 1:
                            achv_message += "‚úÖ\"–¢–≤–æ—è –ø–µ—Ä–≤–∞—è –∞–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–∫–∞\"üçç\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 1 —Ä–∞–∑\n\n"
                        else:
                            achv_message += f"‚ùå\"–¢–≤–æ—è –ø–µ—Ä–≤–∞—è –∞–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–∫–∞\"üçç\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 1 —Ä–∞–∑\nü§ñ–ï—â–µ {1 - pidor_count} —Ä–∞–∑(–∞)\n\n"
                        if pidor_count >= 3:
                            achv_message += "‚úÖ\"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–∞–ª-–õ—ç–Ω–¥\"üç©\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 3 —Ä–∞–∑–∞\n\n"
                        else:
                            achv_message += f"‚ùå\"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–∞–ª-–õ—ç–Ω–¥\"üç©\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 3 —Ä–∞–∑–∞\nü§ñ–ï—â–µ {3 - pidor_count} —Ä–∞–∑(–∞)\n\n"
                        if pidor_count >= 10:
                            achv_message += "‚úÖ\"–û—Ç–∫—Ä–æ–π –≤ —Å–µ–±–µ Gachi-—á–∞–∫—Ä—É\"üßòüèø\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 10 —Ä–∞–∑\n\n"
                        else:
                            achv_message += f"‚ùå\"–û—Ç–∫—Ä–æ–π –≤ —Å–µ–±–µ Gachi-—á–∞–∫—Ä—É\"üßòüèø\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 10 —Ä–∞–∑\nü§ñ–ï—â–µ {10 - pidor_count} —Ä–∞–∑(–∞)\n\n"
                        if pidor_count >= 100:
                            achv_message += "‚úÖ\"–ü—É—Ç—å –∫ –≥–µ–π—Å–∫–æ–º—É –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É —Ç–µ—Ä–Ω–∏—Å—Ç –∏ –æ–ø–∞—Å–µ–Ω\"üî•\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 100\n\n"
                        else:
                            achv_message += f"‚ùå\"–ü—É—Ç—å –∫ –≥–µ–π—Å–∫–æ–º—É –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É —Ç–µ—Ä–Ω–∏—Å—Ç –∏ –æ–ø–∞—Å–µ–Ω\"üî•\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 100 —Ä–∞–∑\nü§ñ–ï—â–µ {100 - pidor_count} —Ä–∞–∑(–∞)\n\n"
                        if pidor_count >= 300:
                            achv_message += "‚úÖ\"–û—Ç—Å–æ—Å —É —Ç—Ä–∞–∫—Ç–æ—Ä–∏—Å—Ç–∞\"üöú\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 300 —Ä–∞–∑\n\n"
                        else:
                            achv_message += f"‚ùå\"–û—Ç—Å–æ—Å —É —Ç—Ä–∞–∫—Ç–æ—Ä–∏—Å—Ç–∞\"üöú\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 300 —Ä–∞–∑\nü§ñ–ï—â–µ {300 - pidor_count} —Ä–∞–∑(–∞)\n\n"
                        if pidor_count >= 1000:
                            achv_message += "‚úÖ\"–ö–æ—Ä–æ–ª—å –ø–∏–¥–æ—Ä—Å–∫–æ–π –≥–æ—Ä—ã\"‚õ∞\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 1000 —Ä–∞–∑\n\n"
                        else:
                            achv_message += f"‚ùå\"–ö–æ—Ä–æ–ª—å –ø–∏–¥–æ—Ä—Å–∫–æ–π –≥–æ—Ä—ã\"‚õ∞\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 1000 —Ä–∞–∑\nü§ñ–ï—â–µ {1000 - pidor_count} —Ä–∞–∑(–∞)\n\n"
                        bot.send_message(message.chat.id, achv_message)
                    else:
                        bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ —É—á–∞—Å—Ç–∏–µüòî –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã üëâ/reg@pidorochek_bot")
            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)
    @bot.message_handler(commands=['pidor'])
    def pidor_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                cd = psql.get_cooldown(message.chat.id)
                if cd:
                    cooldown_time = psql.get_cooldown_time()[1]
                    time_cd = message.date - cd[2]
                    if time_cd >= cooldown_time:
                        psql.delete_cooldown(cd[0])
                    else:
                        temp_time = round((cooldown_time - time_cd)/3600)
                        if temp_time == 0:
                            temp_time = round((cooldown_time - time_cd)/60)
                            return bot.send_message(message.chat.id, f"–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–∏–¥–æ—Ä–∞üåà –æ—Å—Ç–∞–ª–æ—Å—å {temp_time} –º–∏–Ω—É—Ç(—ã)‚è≥")
                        elif temp_time == 21 or temp_time == 1:
                            return bot.send_message(message.chat.id, f"–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–∏–¥–æ—Ä–∞üåà –æ—Å—Ç–∞–ª—Å—è {temp_time} —á–∞—Å‚è≥")
                        elif temp_time == 2 or temp_time == 3 or temp_time == 4 or temp_time == 22 or temp_time == 23:
                            return bot.send_message(message.chat.id, f"–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–∏–¥–æ—Ä–∞üåà –æ—Å—Ç–∞–ª–æ—Å—å {temp_time} —á–∞—Åa‚è≥")
                        else:
                            return bot.send_message(message.chat.id, f"–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–∏–¥–æ—Ä–∞üåà –æ—Å—Ç–∞–ª–æ—Å—å {temp_time} —á–∞—Å–æ–≤‚è≥")
                if message.chat.type == 'private':
                    return wrong_chat_message(message, bot)
                else:
                    psql.add_cooldown(message.chat.id, message.date)
                    users = psql.get_reg_users(message.chat.id)
                    if bool(len(users)):
                        pidor_index = random.randrange(len(users))
                        pidor = users[pidor_index][4] if users[pidor_index][4] else users[pidor_index][3]
                        win_phrase_index = random.randrange(len(const.win_pidor_phrase))
                        first_phrase_index = random.randrange(len(const.pidor_text))
                        while True:
                            second_phrase_index = random.randrange(len(const.pidor_text))
                            if first_phrase_index == second_phrase_index:
                                continue
                            else:
                                break
                        time.sleep(0.5)
                        bot.send_message(message.chat.id, f"{const.pidor_text[first_phrase_index]}")
                        time.sleep(1.5)
                        bot.send_message(message.chat.id, f"{const.pidor_text[second_phrase_index]}")
                        time.sleep(1.5)
                        bot.send_message(message.chat.id, f"{const.win_pidor_phrase[win_phrase_index]}@{pidor}")
                        pidor_count = users[pidor_index][5] + 1
                        psql.set_pidor_count(message.chat.id, users[pidor_index][1], pidor_count)
                        if pidor_count == 1:
                            bot.send_message(message.chat.id, f"ü•≥–ü–æ–∑–¥—Ä–æ–≤–ª—è—é, @{users[pidor_index][4] if users[pidor_index][4] else users[pidor_index][3]}\nT—ã –æ—Ç–∫—Ä—ã–ª(a) –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!!!\n\n‚úÖ\"–¢–≤–æ—è –ø–µ—Ä–≤–∞—è –∞–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–∫–∞\"üçç\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 1 —Ä–∞–∑–∞\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è /achievements@pidorochek_bot")
                        if pidor_count == 3:
                            bot.send_message(message.chat.id, f"ü•≥–ü–æ–∑–¥—Ä–æ–≤–ª—è—é, @{users[pidor_index][4] if users[pidor_index][4] else users[pidor_index][3]}\nT—ã –æ—Ç–∫—Ä—ã–ª(a) –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!!!\n\n‚úÖ\"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–∞–ª-–õ—ç–Ω–¥\"üç©\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 3 —Ä–∞–∑–∞\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è /achievements@pidorochek_bot")
                        if pidor_count == 10:
                            bot.send_message(message.chat.id, f"ü•≥–ü–æ–∑–¥—Ä–æ–≤–ª—è—é, @{users[pidor_index][4] if users[pidor_index][4] else users[pidor_index][3]}\nT—ã –æ—Ç–∫—Ä—ã–ª(a) –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!!!\n\n‚úÖ\"–û—Ç–∫—Ä–æ–π –≤ —Å–µ–±–µ Gachi-—á–∞–∫—Ä—É\"üßòüèø\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 10 —Ä–∞–∑\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è /achievements@pidorochek_bot")
                        if pidor_count == 100:
                            bot.send_message(message.chat.id, f"ü•≥–ü–æ–∑–¥—Ä–æ–≤–ª—è—é, @{users[pidor_index][4] if users[pidor_index][4] else users[pidor_index][3]}\nT—ã –æ—Ç–∫—Ä—ã–ª(a) –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!!!\n\n‚úÖ\"–ü—É—Ç—å –∫ –≥–µ–π—Å–∫–æ–º—É –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É —Ç–µ—Ä–Ω–∏—Å—Ç –∏ –æ–ø–∞—Å–µ–Ω\"üî•\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 100\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è /achievements@pidorochek_bot")
                        if pidor_count == 300:
                            bot.send_message(message.chat.id, f"ü•≥–ü–æ–∑–¥—Ä–æ–≤–ª—è—é, @{users[pidor_index][4] if users[pidor_index][4] else users[pidor_index][3]}\nT—ã –æ—Ç–∫—Ä—ã–ª(a) –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!!!\n\n‚úÖ\"–û—Ç—Å–æ—Å —É —Ç—Ä–∞–∫—Ç–æ—Ä–∏—Å—Ç–∞\"üöú\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 300 —Ä–∞–∑\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è /achievements@pidorochek_bot")
                        if pidor_count == 1000:
                            bot.send_message(message.chat.id, f"ü•≥–ü–æ–∑–¥—Ä–æ–≤–ª—è—é, @{users[pidor_index][4] if users[pidor_index][4] else users[pidor_index][3]}\nT—ã –æ—Ç–∫—Ä—ã–ª(a) –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!!!\n\n‚úÖ\"–ö–æ—Ä–æ–ª—å –ø–∏–¥–æ—Ä—Å–∫–æ–π –≥–æ—Ä—ã\"‚õ∞\n‚úçÔ∏è–°—Ç–∞—Ç—å –ø–∏–¥–æ—Ä–æ–º 1000 —Ä–∞–∑\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è /achievements@pidorochek_bot")
                    else:
                        bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ —É—á–∞—Å—Ç–∏–µüòî –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã üëâ/reg@pidorochek_bot")
            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)
    @bot.message_handler(commands=['stats'])
    def stats_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                if message.chat.type == 'private':
                    return wrong_chat_message(message, bot)
                else:
                    users = psql.get_reg_users(message.chat.id)
                    if bool(len(users)):
                        stats_message_text = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∏–¥–æ—Ä–∞—Å–æ–≤ —á–∞—Ç–∞ \"{message.chat.title}\"üëá\n"
                        users.sort(key=lambda x: x[5], reverse=True)
                        i = 0
                        for user in users:
                            if i == 0:
                                stats_message_text += f"üë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë® {user[4].rstrip() if not(user[4].rstrip() == 'None') else user[3].rstrip()} - {user[5]} —Ä–∞–∑(–∞)ü•á\n"
                            elif i == 1:
                                stats_message_text += f"üë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë® {user[4].rstrip() if not(user[4].rstrip() == 'None') else user[3].rstrip()} - {user[5]} —Ä–∞–∑(–∞)ü•à\n"
                            elif i == 2:
                                stats_message_text += f"üë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë® {user[4].rstrip() if not(user[4].rstrip() == 'None') else user[3].rstrip()} - {user[5]} —Ä–∞–∑(–∞)ü•â\n"
                            else:
                                stats_message_text += f"üë®‚Äç‚ù§Ô∏è‚Äçüíã‚Äçüë® {user[4].rstrip() if not(user[4].rstrip() == 'None') else user[3].rstrip()} - {user[5]} —Ä–∞–∑(–∞)üí©\n"
                            i += 1
                        bot.send_message(message.chat.id, stats_message_text)
                    else:
                        bot.send_message(message.chat.id, "–ù–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ωüò≠, –ø–∏–¥–æ—Ä–∞—Å–æ–≤ –Ω–µ—ÇüôÑ\n–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏—Ç–µ üëâ/reg@pidorochek_botüôè")
            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)
    @bot.message_handler(commands=['updatedata'])
    def update_data_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                psql.update_data(message.from_user.id, str(message.from_user.username), str(message.from_user.first_name))
                bot.reply_to(message, f"–¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω—ã –≤ –ü–∏–¥–æ—Ä–ë–∞–∑—É!üìÉ\nüëâ–ò–º—è: {message.from_user.first_name}\nüëâ–ù–∏–∫–Ω–µ–π–º: {message.from_user.username}")
            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)
    # @bot.message_handler(commands=['dev'])
    # def dev(message):
    #     test = psql.user_exists(266460350, -1001414157209)
    #     print(test[4].rstrip() if not(test[4].rstrip() == 'None') else test[3].rstrip())

    # –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –µ—Å–ª–∏ –∫ –Ω–µ–º—É –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞
    @bot.message_handler(commands=['changecooldowntime'])
    def change_cooldown_time_message(message):
        try:
            psql = PostgreSQL(DATABASE, USER, PASSWORD, HOST, PORT)
            try:
                if message.from_user.id == adminId:
                    new_cd_time = message.text[20:]
                    try:
                        int(new_cd_time)
                    except ValueError:
                        return bot.send_message(message.chat.id, "–ß–µ—Ç–æ —Ç—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã!\n–î–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∞–∫ /changecooldowntime <—Å–µ–∫—É–Ω–¥—ã>")
                    psql.set_cooldown_time(new_cd_time)
                    bot.send_message(message.chat.id, f"–ö–¥ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {new_cd_time}c")
                    chatIds = psql.get_all_chat_id()
                    for ids in chatIds:
                        try:
                            bot.send_message(ids[0], f"‚åõÔ∏è–ö—É–ª–¥–∞—É–Ω –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∏–¥–æ—Ä–∞—Å–∞ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω\n\nüÜï–¢–µ–ø–µ—Ä—å {new_cd_time}c")
                        except Exception as ex:
                            # –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ—Ç–ª–æ–≤–∫—É –Ω–µ –Ω–∞–π–¥–µ–Ω—ã—Ö —á–∞—Ç–æ–≤
                            print(ex)
                            bot.send_message(message.chat.id, f"‚ùå–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É id: {ids[0]}")
            except Exception as e:
                print(e)
                error_message(message, bot)
            finally:
                psql.close()
        except Exception as err:
            print(err)
            error_message(message, bot)
    @bot.message_handler(content_types=['text'])
    def trigger_message(message):
        try:
            if not (message.chat.id == message.from_user.id):
                for trigger in const.triggers:
                    if trigger in message.text.lower():
                        temp_index = random.randrange(len(const.answer_triggers))
                        bot.reply_to(message, const.answer_triggers[temp_index])
                        break
        except Exception as e:
            print(e)
            error_message(message, bot)
    bot.infinity_polling()


if __name__ == '__main__':
    telegram_bot(os.environ.get('TOKEN'))