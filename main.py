import telebot
import os
from telebot.types import MessageEntity
from telebot.util import user_link 
import psycopg2
from postgreSQL import postgreSQL
from dotenv import load_dotenv
import const

def errorMessage(msg, bot):
    bot.send_message(msg.chat.id, "–í –º–æ–µ–º –ü–∏–¥–æ—Ä –º–µ—Ö–∞–Ω–∏–∑–º–µ –∫–∞–∫–æ–π-—Ç–æ —Å–±–æ–π‚åõ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑‚ôª")
def wrongChatMessage(msg, bot):
    bot.send_message(msg.chat.id, "–¢—ã –¥–æ–ª–±–∞–µ–±üë∫, –≤ –≥—Ä—É–ø–ø—É –º–µ–Ω—è –∫–∏–Ω—å –∏ —Ç–∞–º –ø—Ä–æ–ø–∏—Å—ã–≤–∞–π —ç—Ç—É –∫–æ–º–∞–Ω–¥—É‚òù")

def telegramBot(TOKEN):
    DATABASE = os.getenv("DATABASE")
    USER = os.getenv("USER")
    PASSWORD = os.getenv("PASSWORD")
    HOST = os.getenv("HOST")
    PORT = os.getenv("PORT")
    adminId = int(os.getenv("adminId"))
    psql = postgreSQL(DATABASE, USER,PASSWORD, HOST, PORT)

    bot = telebot.TeleBot(TOKEN)

    @bot.message_handler(commands=['start'])
    def startMessage(message):
        try: 
            if message.chat.type == 'private':
                bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {message.from_user.first_name if message.from_user.first_name else message.from_user.username}üëã. –Ø –ü–∏–¥–æ—Ä –ë–æ—Çüåà, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ—é, –¥–æ–±–∞–≤—å –º–µ–Ω—è –≤ —á–∞—Ç –∫ —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º –∏–ª–∏ –∫–æ–ª–ª–µ–≥–∞–ºüí™, –∏ –ø—Ä–æ–ø–∏—à–∏ —Ç–∞–º üëâ/start@pidorochek_bot")
            else:
                bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞ {message.chat.title}üëã.\n –Ø –ü–∏–¥–æ—Ä –ë–æ—Çüåà, –≤–æ—Ç –≤–∞–º –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ –º–Ω–æ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—Å—èüîß\n–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞–ø–∏—Å–∞—Ç—å üëâ/reg@pidorochek_bot\n(–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤üìú –Ω–∞–ø–∏—à–∏—Ç–µ üëâ/showreg@pidorochek_bot)\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—Å–µ –∫—Ç–æ —Ö–æ—Ç–µ–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å, –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—Ç–µ üëâ/pidor@pidorochek_bot\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ãüìã –Ω–∞–ø–∏—à–∏—Ç–µ üëâ/help@pidorochek_bot\n –î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –µ–±–ª—è –≤ —Å—Ä–∞–∫—Éüëâüëå")
        except Exception as e:
            print(e)
        # userId = int(message.from_user.id)
        # chatId = int(message.chat.id)
        # firstName = str(message.from_user.first_name)
        # username = str(message.from_user.username)
        # date = int(message.date)

        # psql.devTestAddUserInBD(userId, chatId, firstName, username, 2, date)

        # bot.send_message(message.chat.id, f"{message.from_user.first_name}")
    @bot.message_handler(commands=['help'])
    def helpMessage(message):
        try:
            if message.from_user.id == adminId and message.chat.id == adminId:
                bot.send_message(message.chat.id, f"–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–º–µ—Ä—Ç–Ω—ã—Ö:\n{const.privateCommands}\n–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n")
            elif message.chat.id == message.from_user.id:
                bot.send_message(message.chat.id, const.privateCommands)
            else:
                bot.send_message(message.chat.id, const.commands)
        except Exception as e:
            print(e)

    bot.infinity_polling()

if __name__ == '__main__':
    load_dotenv()
    TOKEN = os.getenv("TOKEN")
    telegramBot(TOKEN)